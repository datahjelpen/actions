name: k8s-deploy-node-app

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm ci

      - name: Run NPM Build
        run: npm run build --if-present

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build k8s kubeconfig
        env:
          DO_AMS3_DH01_CERTIFICATE: ${{ secrets.DO_AMS3_DH01_CERTIFICATE }}
          DO_AMS3_DH01_CLUSTER_SERVER: ${{ secrets.DO_AMS3_DH01_CLUSTER_SERVER }}
          DO_AMS3_DH01_ADMIN_USER_TOKEN: ${{ secrets.DO_AMS3_DH01_ADMIN_USER_TOKEN }}
        run: |
          sed -i "s|DO_AMS3_DH01_CERTIFICATE|$DO_AMS3_DH01_CERTIFICATE|" ./k8s/kubeconfig.yaml
          sed -i "s|DO_AMS3_DH01_CLUSTER_SERVER|$DO_AMS3_DH01_CLUSTER_SERVER|" ./k8s/kubeconfig.yaml
          sed -i "s|DO_AMS3_DH01_ADMIN_USER_TOKEN|$DO_AMS3_DH01_ADMIN_USER_TOKEN|" ./k8s/kubeconfig.yaml

      - name: Connect k8s to container registry (prepare)
        continue-on-error: true
        run: sudo kubectl --kubeconfig="./k8s/kubeconfig.yaml" delete secret github-container-registry

      - name: Connect k8s to container registry
        env:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DATAHJELPEN_TOKEN_READ_PACKAGES }}
        run: |
          sudo kubectl --kubeconfig="./k8s/kubeconfig.yaml" create secret docker-registry github-container-registry --docker-server=$registry --docker-username=$username --docker-password=$password

      - name: Upload deployment to k8
        run: sudo kubectl --kubeconfig="./k8s/kubeconfig.yaml" apply -f ./k8s/deployment.yaml

      - name: Upload service to k8
        run: sudo kubectl --kubeconfig="./k8s/kubeconfig.yaml" apply -f ./k8s/service.yaml

      - name: Upload ingress to k8
        run: sudo kubectl --kubeconfig="./k8s/kubeconfig.yaml" apply -f ./k8s/ingress.yaml
